{"ast":null,"code":"import React, { useContext } from \"react\";\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { AuthContext } from \"../provider/AuthProvider\";\nimport Home from \"../screens/Home\";\nimport SecondScreen from \"../screens/SecondScreen\";\nimport Login from \"../screens/auth/Login\";\nimport Register from \"../screens/auth/Register\";\nimport ForgetPassword from \"../screens/auth/ForgetPassword\";\nimport Loading from \"../screens/utils/Loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AuthStack = createNativeStackNavigator();\n\nvar Auth = function Auth() {\n  return _jsxs(AuthStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(AuthStack.Screen, {\n      name: \"Login\",\n      component: Login\n    }), _jsx(AuthStack.Screen, {\n      name: \"Register\",\n      component: Register\n    }), _jsx(AuthStack.Screen, {\n      name: \"ForgetPassword\",\n      component: ForgetPassword\n    })]\n  });\n};\n\nvar MainStack = createNativeStackNavigator();\n\nvar Main = function Main() {\n  return _jsxs(MainStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(MainStack.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(MainStack.Screen, {\n      name: \"SecondScreen\",\n      component: SecondScreen\n    })]\n  });\n};\n\nexport default (function () {\n  var auth = useContext(AuthContext);\n  var user = auth.user;\n  return _jsxs(NavigationContainer, {\n    children: [user == null && _jsx(Loading, {}), user == false && _jsx(Auth, {}), user == true && _jsx(Main, {})]\n  });\n});","map":{"version":3,"names":["React","useContext","initializeApp","getApps","NavigationContainer","createNativeStackNavigator","AuthContext","Home","SecondScreen","Login","Register","ForgetPassword","Loading","AuthStack","Auth","headerShown","MainStack","Main","auth","user"],"sources":["C:/Users/antho/Downloads/Archive/src/navigation/AppNavigator.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { initializeApp, getApps } from \"firebase/app\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { AuthContext } from \"../provider/AuthProvider\";\n\n// Main\nimport Home from \"../screens/Home\";\nimport SecondScreen from \"../screens/SecondScreen\";\n\n// Auth screens\nimport Login from \"../screens/auth/Login\";\nimport Register from \"../screens/auth/Register\";\nimport ForgetPassword from \"../screens/auth/ForgetPassword\";\n\nimport Loading from \"../screens/utils/Loading\";\n\nconst AuthStack = createNativeStackNavigator();\n\nconst Auth = () => {\n  return (\n    <AuthStack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <AuthStack.Screen name=\"Login\" component={Login} />\n      <AuthStack.Screen name=\"Register\" component={Register} />\n      <AuthStack.Screen name=\"ForgetPassword\" component={ForgetPassword} />\n    </AuthStack.Navigator>\n  );\n};\n\nconst MainStack = createNativeStackNavigator();\n\nconst Main = () => {\n  return (\n    <MainStack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <MainStack.Screen name=\"Home\" component={Home} />\n      <MainStack.Screen name=\"SecondScreen\" component={SecondScreen} />\n    </MainStack.Navigator>\n  );\n};\n\nexport default () => {\n  const auth = useContext(AuthContext);\n  const user = auth.user;\n  return (\n    <NavigationContainer>\n      {user == null && <Loading />}\n      {user == false && <Auth />}\n      {user == true && <Main />}\n    </NavigationContainer>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,cAAvC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,WAAT;AAGA,OAAOC,IAAP;AACA,OAAOC,YAAP;AAGA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,cAAP;AAEA,OAAOC,OAAP;;;AAEA,IAAMC,SAAS,GAAGR,0BAA0B,EAA5C;;AAEA,IAAMS,IAAI,GAAG,SAAPA,IAAO,GAAM;EACjB,OACE,MAAC,SAAD,CAAW,SAAX;IACE,aAAa,EAAE;MACbC,WAAW,EAAE;IADA,CADjB;IAAA,WAKE,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,OAAvB;MAA+B,SAAS,EAAEN;IAA1C,EALF,EAME,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,UAAvB;MAAkC,SAAS,EAAEC;IAA7C,EANF,EAOE,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,gBAAvB;MAAwC,SAAS,EAAEC;IAAnD,EAPF;EAAA,EADF;AAWD,CAZD;;AAcA,IAAMK,SAAS,GAAGX,0BAA0B,EAA5C;;AAEA,IAAMY,IAAI,GAAG,SAAPA,IAAO,GAAM;EACjB,OACE,MAAC,SAAD,CAAW,SAAX;IACE,aAAa,EAAE;MACbF,WAAW,EAAE;IADA,CADjB;IAAA,WAKE,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,MAAvB;MAA8B,SAAS,EAAER;IAAzC,EALF,EAME,KAAC,SAAD,CAAW,MAAX;MAAkB,IAAI,EAAC,cAAvB;MAAsC,SAAS,EAAEC;IAAjD,EANF;EAAA,EADF;AAUD,CAXD;;AAaA,gBAAe,YAAM;EACnB,IAAMU,IAAI,GAAGjB,UAAU,CAACK,WAAD,CAAvB;EACA,IAAMa,IAAI,GAAGD,IAAI,CAACC,IAAlB;EACA,OACE,MAAC,mBAAD;IAAA,WACGA,IAAI,IAAI,IAAR,IAAgB,KAAC,OAAD,KADnB,EAEGA,IAAI,IAAI,KAAR,IAAiB,KAAC,IAAD,KAFpB,EAGGA,IAAI,IAAI,IAAR,IAAgB,KAAC,IAAD,KAHnB;EAAA,EADF;AAOD,CAVD"},"metadata":{},"sourceType":"module"}