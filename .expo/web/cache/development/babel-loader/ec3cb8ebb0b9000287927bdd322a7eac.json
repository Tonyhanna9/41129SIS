{"ast":null,"code":"import { getHeaderTitle, Header, HeaderBackButton, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function NativeStackView(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors;\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(View, {\n    style: styles.container\n  }, state.routes.map(function (route, i) {\n    var _state$routes;\n\n    var isFocused = state.index === i;\n    var canGoBack = i !== 0;\n    var previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    var previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    var _descriptors$route$ke = descriptors[route.key],\n        options = _descriptors$route$ke.options,\n        navigation = _descriptors$route$ke.navigation,\n        render = _descriptors$route$ke.render;\n    var header = options.header,\n        headerShown = options.headerShown,\n        headerTintColor = options.headerTintColor,\n        headerBackImageSource = options.headerBackImageSource,\n        headerLeft = options.headerLeft,\n        headerRight = options.headerRight,\n        headerTitle = options.headerTitle,\n        headerTitleAlign = options.headerTitleAlign,\n        headerTitleStyle = options.headerTitleStyle,\n        headerStyle = options.headerStyle,\n        headerShadowVisible = options.headerShadowVisible,\n        headerTransparent = options.headerTransparent,\n        contentStyle = options.contentStyle,\n        headerBackTitle = options.headerBackTitle;\n    return React.createElement(Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: previousDescriptor ? {\n          title: getHeaderTitle(previousDescriptor.options, previousDescriptor.route.name)\n        } : undefined,\n        options: options,\n        route: route,\n        navigation: navigation\n      }) : React.createElement(Header, {\n        title: getHeaderTitle(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? function (_ref2) {\n          var tintColor = _ref2.tintColor;\n          return headerLeft({\n            tintColor: tintColor,\n            canGoBack: canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? function (_ref3) {\n          var tintColor = _ref3.tintColor;\n          return React.createElement(HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? function () {\n              return React.createElement(Image, {\n                source: headerBackImageSource,\n                style: [styles.backImage, {\n                  tintColor: tintColor\n                }]\n              });\n            } : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? function (_ref4) {\n          var tintColor = _ref4.tintColor;\n          return headerRight({\n            tintColor: tintColor\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? function (_ref5) {\n          var children = _ref5.children,\n              tintColor = _ref5.tintColor;\n          return headerTitle({\n            children: children,\n            tintColor: tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerStyle: [headerTransparent ? {\n          position: 'absolute',\n          backgroundColor: 'transparent'\n        } : null, headerStyle, headerShadowVisible === false ? {\n          shadowOpacity: 0,\n          borderBottomWidth: 0\n        } : null]\n      }),\n      style: [StyleSheet.absoluteFill, {\n        display: isFocused ? 'flex' : 'none'\n      }]\n    }, React.createElement(View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render()));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","Header","HeaderBackButton","SafeAreaProviderCompat","Screen","React","NativeStackView","state","descriptors","View","style","styles","container","routes","map","route","i","isFocused","index","canGoBack","previousKey","_state$routes","key","previousDescriptor","undefined","options","navigation","render","header","headerShown","headerTintColor","headerBackImageSource","headerLeft","headerRight","headerTitle","headerTitleAlign","headerTitleStyle","headerStyle","headerShadowVisible","headerTransparent","contentStyle","headerBackTitle","focused","back","title","name","tintColor","label","backImage","Image","source","onPress","goBack","children","position","backgroundColor","shadowOpacity","borderBottomWidth","StyleSheet","absoluteFill","display","contentContainer","create","flex","height","width","margin","resizeMode"],"sources":["NativeStackView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  HeaderBackButton,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport type {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n} from '../types';\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  // This is used for the native implementation of the stack.\n  // eslint-disable-next-line react/no-unused-prop-types\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nexport default function NativeStackView({ state, descriptors }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n          const isFocused = state.index === i;\n          const canGoBack = i !== 0;\n          const previousKey = state.routes[i - 1]?.key;\n          const previousDescriptor = previousKey\n            ? descriptors[previousKey]\n            : undefined;\n          const { options, navigation, render } = descriptors[route.key];\n\n          const {\n            header,\n            headerShown,\n            headerTintColor,\n            headerBackImageSource,\n            headerLeft,\n            headerRight,\n            headerTitle,\n            headerTitleAlign,\n            headerTitleStyle,\n            headerStyle,\n            headerShadowVisible,\n            headerTransparent,\n            contentStyle,\n            headerBackTitle,\n          } = options;\n\n          return (\n            <Screen\n              key={route.key}\n              focused={isFocused}\n              route={route}\n              navigation={navigation}\n              headerShown={headerShown}\n              headerTransparent={headerTransparent}\n              header={\n                header !== undefined ? (\n                  header({\n                    back: previousDescriptor\n                      ? {\n                          title: getHeaderTitle(\n                            previousDescriptor.options,\n                            previousDescriptor.route.name\n                          ),\n                        }\n                      : undefined,\n                    options,\n                    route,\n                    navigation,\n                  })\n                ) : (\n                  <Header\n                    title={getHeaderTitle(options, route.name)}\n                    headerTintColor={headerTintColor}\n                    headerLeft={\n                      typeof headerLeft === 'function'\n                        ? ({ tintColor }) =>\n                            headerLeft({\n                              tintColor,\n                              canGoBack,\n                              label: headerBackTitle,\n                            })\n                        : headerLeft === undefined && canGoBack\n                        ? ({ tintColor }) => (\n                            <HeaderBackButton\n                              tintColor={tintColor}\n                              backImage={\n                                headerBackImageSource !== undefined\n                                  ? () => (\n                                      <Image\n                                        source={headerBackImageSource}\n                                        style={[\n                                          styles.backImage,\n                                          { tintColor },\n                                        ]}\n                                      />\n                                    )\n                                  : undefined\n                              }\n                              onPress={navigation.goBack}\n                              canGoBack={canGoBack}\n                            />\n                          )\n                        : headerLeft\n                    }\n                    headerRight={\n                      typeof headerRight === 'function'\n                        ? ({ tintColor }) => headerRight({ tintColor })\n                        : headerRight\n                    }\n                    headerTitle={\n                      typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) =>\n                            headerTitle({ children, tintColor })\n                        : headerTitle\n                    }\n                    headerTitleAlign={headerTitleAlign}\n                    headerTitleStyle={headerTitleStyle}\n                    headerStyle={[\n                      headerTransparent\n                        ? {\n                            position: 'absolute',\n                            backgroundColor: 'transparent',\n                          }\n                        : null,\n                      headerStyle,\n                      headerShadowVisible === false\n                        ? { shadowOpacity: 0, borderBottomWidth: 0 }\n                        : null,\n                    ]}\n                  />\n                )\n              }\n              style={[\n                StyleSheet.absoluteFill,\n                { display: isFocused ? 'flex' : 'none' },\n              ]}\n            >\n              <View style={[styles.contentContainer, contentStyle]}>\n                {render()}\n              </View>\n            </Screen>\n          );\n        })}\n      </View>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}