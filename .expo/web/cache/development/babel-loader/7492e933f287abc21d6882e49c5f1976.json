{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Layout, TopNav, Text, themeColor, useTheme } from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useTheme = useTheme(),\n      isDarkmode = _useTheme.isDarkmode,\n      setTheme = _useTheme.setTheme;\n\n  return _jsxs(Layout, {\n    children: [_jsx(TopNav, {\n      middleContent: \"Second Screen\",\n      leftContent: _jsx(Ionicons, {\n        name: \"chevron-back\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      leftAction: function leftAction() {\n        return navigation.goBack();\n      },\n      rightContent: _jsx(Ionicons, {\n        name: isDarkmode ? \"sunny\" : \"moon\",\n        size: 20,\n        color: isDarkmode ? themeColor.white100 : themeColor.dark\n      }),\n      rightAction: function rightAction() {\n        if (isDarkmode) {\n          setTheme(\"light\");\n        } else {\n          setTheme(\"dark\");\n        }\n      }\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(Text, {\n        fontWeight: \"bold\",\n        children: \"This is the second screen\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","Layout","TopNav","Text","themeColor","useTheme","Ionicons","navigation","isDarkmode","setTheme","white100","dark","goBack","flex","alignItems","justifyContent"],"sources":["C:/Users/antho/Downloads/Archive/src/screens/SecondScreen.js"],"sourcesContent":["import React from \"react\";\nimport { View } from \"react-native\";\nimport {\n  Layout,\n  TopNav,\n  Text,\n  themeColor,\n  useTheme,\n} from \"react-native-rapi-ui\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport default function ({ navigation }) {\n  const { isDarkmode, setTheme } = useTheme();\n  return (\n    <Layout>\n      <TopNav\n        middleContent=\"Second Screen\"\n        leftContent={\n          <Ionicons\n            name=\"chevron-back\"\n            size={20}\n            color={isDarkmode ? themeColor.white100 : themeColor.dark}\n          />\n        }\n        leftAction={() => navigation.goBack()}\n        rightContent={\n          <Ionicons\n            name={isDarkmode ? \"sunny\" : \"moon\"}\n            size={20}\n            color={isDarkmode ? themeColor.white100 : themeColor.dark}\n          />\n        }\n        rightAction={() => {\n          if (isDarkmode) {\n            setTheme(\"light\");\n          } else {\n            setTheme(\"dark\");\n          }\n        }}\n      />\n      <View\n        style={{\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {/* This text using ubuntu font */}\n        <Text fontWeight=\"bold\">This is the second screen</Text>\n      </View>\n    </Layout>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SACEC,MADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,QALF,QAMO,sBANP;AAOA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,eAAe,gBAA0B;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACvC,gBAAiCF,QAAQ,EAAzC;EAAA,IAAQG,UAAR,aAAQA,UAAR;EAAA,IAAoBC,QAApB,aAAoBA,QAApB;;EACA,OACE,MAAC,MAAD;IAAA,WACE,KAAC,MAAD;MACE,aAAa,EAAC,eADhB;MAEE,WAAW,EACT,KAAC,QAAD;QACE,IAAI,EAAC,cADP;QAEE,IAAI,EAAE,EAFR;QAGE,KAAK,EAAED,UAAU,GAAGJ,UAAU,CAACM,QAAd,GAAyBN,UAAU,CAACO;MAHvD,EAHJ;MASE,UAAU,EAAE;QAAA,OAAMJ,UAAU,CAACK,MAAX,EAAN;MAAA,CATd;MAUE,YAAY,EACV,KAAC,QAAD;QACE,IAAI,EAAEJ,UAAU,GAAG,OAAH,GAAa,MAD/B;QAEE,IAAI,EAAE,EAFR;QAGE,KAAK,EAAEA,UAAU,GAAGJ,UAAU,CAACM,QAAd,GAAyBN,UAAU,CAACO;MAHvD,EAXJ;MAiBE,WAAW,EAAE,uBAAM;QACjB,IAAIH,UAAJ,EAAgB;UACdC,QAAQ,CAAC,OAAD,CAAR;QACD,CAFD,MAEO;UACLA,QAAQ,CAAC,MAAD,CAAR;QACD;MACF;IAvBH,EADF,EA0BE,KAAC,IAAD;MACE,KAAK,EAAE;QACLI,IAAI,EAAE,CADD;QAELC,UAAU,EAAE,QAFP;QAGLC,cAAc,EAAE;MAHX,CADT;MAAA,UAQE,KAAC,IAAD;QAAM,UAAU,EAAC,MAAjB;QAAA;MAAA;IARF,EA1BF;EAAA,EADF;AAuCD"},"metadata":{},"sourceType":"module"}